[alias]
    pick= cherry-pick
    pushf = push -f
    pullf = !git fetch --tags && git reset origin/$(git symbolic-ref --short -q HEAD) --hard
    s   = !git branch -a && git status
    ss  = status -sb
    sc  = clone --recursive
    su  = submodule update --init --recursive
    ch  = checkout
    chf = checkout --
    cdf = clean -df --
    rch = !git checkout -t origin/$1 && false &&
    rp  = !git push origin $(git symbolic-ref --short -q HEAD)
    rpp = !git push --set-upstream origin $(git symbolic-ref --short -q HEAD)
    rd = !git push origin :$(git symbolic-ref --short -q HEAD) && git branch --unset-upstream
    fs = checkout -b
    fd = !GITBEBRANCH=$(git symbolic-ref --short -q HEAD) && [ "$GITBEBRANCH" == "master" ] && echo "Make sure to delete the 'master' brunch manually" || (echo "Are you sure you want to delete $GITBEBRANCH [y/n]" && yn=0 && read yn && [ "$yn" == "y" ] && (git checkout master && git branch -d $GITBEBRANCH) || echo "$GITBEBRANCH Brunch deletion canceled.")
    aa = add --all
    ai = add --interactive
    ap = add --patch
    cm  = commit -m
    cma = commit --amend
    cmu = commit --amend --reset-author
    tt = tag -l
    ttl = !git describe --tags `git rev-list --tags --max-count=1`
    tchl = !git checkout $(git ttl)
    ts = !git tag -a "$1" && false &&
    tpp = push --tags
    td = !git tag -d "$1" && false &&
    tss = !git tag -a "$1" && git tpp && false &&
    tdd = !git tag -d "$1" && git push origin :refs/tags/$1 && false &&
    dun = diff
    din = diff --cached
    d-1 = diff HEAD^ HEAD
    undo = reset HEAD^
    gun = config user.name
    gue = config user.email
    gut = !git config --list | grep ^user.
    gcn = config credential.helper "cache --timeout=0"
    gcc = config credential.helper cache
    gcd = config --unset credential.helper
    c  = !git config --list | grep
    squash = !git rebase -i HEAD~$1 && false &&
    ag = log --graph --all --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso
    g  = log --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso
    aga= !git log --all --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --grep=$1 && false &&
    ga = !git log --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --author=$1 && false &&
    agg= log --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --remotes=*
    gg = log --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --remotes=*
    agga= !git log --all --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --remotes=* --author=$1 && false &&
    gga= !git log --graph --pretty=format:'%C(dim)%h - %C(reset)%ad %C(bold blue)(%cr)%C(bold red)%d%C(reset)%n           %C(reset)%s%C(reset)%n           %C(dim green)%an<%ae>%n' --abbrev-commit --date=iso --remotes=* --author=$1 && false &&
